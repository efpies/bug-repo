@using QoodenTask.Models
@using QoodenTask.ServiceInterfaces
@using QoodenTask.Enums

@inject ICurrencyService CurrencyService

@if (_selectedCurrency != null)
{
    <p><em>Selected currency: @_selectedCurrency.Id</em></p>
                                                        
    if (_selectedCurrency.Type == CurrencyType.Crypto)
    {
        <CryptoDepositForm CurrencyId="@_selectedCurrency.Id" UserId="@UserId"></CryptoDepositForm>
    }
    else if(_selectedCurrency.Type == CurrencyType.Fiat)
    {
        <FiatDepositForm CurrencyId="@_selectedCurrency.Id" UserId="@UserId"></FiatDepositForm>
    }
    <p/>
}

<BalancesData UserId="@UserId" ButtonName="Deposit" ButtonMethod="@(balance => SelectCurrency(balance.Key))"></BalancesData>

@code {
    [Parameter] public int UserId { get; set; }
    private Dictionary<string, UserBalance>? _balances;
    private Currency? _selectedCurrency;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private async Task SelectCurrency(string currencyId)
    {
        _selectedCurrency = await CurrencyService.GetCurrency(currencyId);
    }

}